process {
  withLabel:process_1{
    cpus = 1
    memory = 1.GB
  }
  withLabel:process_2{
    cpus = 1
    memory = 1.GB
  }
  withLabel:process_3{
    cpus = 1
    memory = 2.GB
  }
}

profiles {
  standard {
    conda.enabled = true
    conda.useMamba = false
    process.executor = 'local'
  }
  cluster {
    conda.enabled = true
    conda.useMamba = false
    process.executor = 'slurm'
    process.queue = 'Compute'
  }
  debug { 
    process.beforeScript = 'echo $HOSTNAME' 
  }
  test {
    timeline.enabled = false
    report.enabled = false
    trace.enabled = false
    dag.enabled = false
  }
  gitlab_ci {
    // these resources are limited in Gitlab CI
    process {
      withLabel:process_1{
        cpus = 1
        memory = 1.GB
        time = 1.h
      }
      withLabel:process_2{
        cpus = 1
        memory = 1.GB
        time = 1.h
      }
      withLabel:process_3{
        cpus = 1
        memory = 1.GB
        time = 1.h
      }
    }
    conda.enabled = true
    conda.useMamba = true
  }
  lenient {
    // this will ignore errors in any given step of the pipeline and proceed
    // quite helpful when you want to process larger cohorts and cannot guarantee
    // that every step is run successfully
    process.errorStrategy = 'ignore'
  }
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

VERSION = '0.1'


manifest {
  name = 'TRON-Bioinformatics/nf-template'
  author = 'Your Name'
  homePage = ''
  description = 'nf template'
  mainScript = 'main.nf'
  nextflowVersion = '23.10.1'
  version = VERSION
}


params.help = false
params.input_table = false
params.output = false
// Here you could specify your minimal reference fasta file
// that you generated
params.reference_fasta = "${baseDir}/resources/minigenome_200.fasta"

params.help_message = """
NF template v${VERSION}

Usage:
    nextflow run tron-bioinformatics/nf-template -profile cluster --input_table input_table --output output_path

Input:
    * input_table: the path to a comma-separated values file containing in each row the sample name, FASTQ 1 and FASTQ 2 files.
    The input table does not have header!
    Example input file:
    name1	fastq1	fastq2
    name2	fastq1	fastq2

Optional input:
    *

Output:
    * Output
    """
